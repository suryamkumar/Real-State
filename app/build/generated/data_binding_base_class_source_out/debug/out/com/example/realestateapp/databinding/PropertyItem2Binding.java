// Generated by view binder compiler. Do not edit!
package com.example.realestateapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.realestateapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PropertyItem2Binding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardViewFavourite;

  @NonNull
  public final TextView locationTextView;

  @NonNull
  public final TextView priceTextView;

  @NonNull
  public final LinearLayout propertiesLayout;

  @NonNull
  public final ImageView propertyImageView;

  @NonNull
  public final TextView propertyTitleTextView;

  @NonNull
  public final TextView removeFavButton;

  @NonNull
  public final TextView rentSellTextView;

  private PropertyItem2Binding(@NonNull CardView rootView, @NonNull CardView cardViewFavourite,
      @NonNull TextView locationTextView, @NonNull TextView priceTextView,
      @NonNull LinearLayout propertiesLayout, @NonNull ImageView propertyImageView,
      @NonNull TextView propertyTitleTextView, @NonNull TextView removeFavButton,
      @NonNull TextView rentSellTextView) {
    this.rootView = rootView;
    this.cardViewFavourite = cardViewFavourite;
    this.locationTextView = locationTextView;
    this.priceTextView = priceTextView;
    this.propertiesLayout = propertiesLayout;
    this.propertyImageView = propertyImageView;
    this.propertyTitleTextView = propertyTitleTextView;
    this.removeFavButton = removeFavButton;
    this.rentSellTextView = rentSellTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static PropertyItem2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PropertyItem2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.property_item2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PropertyItem2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardViewFavourite = (CardView) rootView;

      id = R.id.locationTextView;
      TextView locationTextView = ViewBindings.findChildViewById(rootView, id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.priceTextView;
      TextView priceTextView = ViewBindings.findChildViewById(rootView, id);
      if (priceTextView == null) {
        break missingId;
      }

      id = R.id.properties_layout;
      LinearLayout propertiesLayout = ViewBindings.findChildViewById(rootView, id);
      if (propertiesLayout == null) {
        break missingId;
      }

      id = R.id.propertyImageView;
      ImageView propertyImageView = ViewBindings.findChildViewById(rootView, id);
      if (propertyImageView == null) {
        break missingId;
      }

      id = R.id.propertyTitleTextView;
      TextView propertyTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (propertyTitleTextView == null) {
        break missingId;
      }

      id = R.id.remove_fav_button;
      TextView removeFavButton = ViewBindings.findChildViewById(rootView, id);
      if (removeFavButton == null) {
        break missingId;
      }

      id = R.id.rent_sellTextView;
      TextView rentSellTextView = ViewBindings.findChildViewById(rootView, id);
      if (rentSellTextView == null) {
        break missingId;
      }

      return new PropertyItem2Binding((CardView) rootView, cardViewFavourite, locationTextView,
          priceTextView, propertiesLayout, propertyImageView, propertyTitleTextView,
          removeFavButton, rentSellTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
