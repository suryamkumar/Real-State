// Generated by view binder compiler. Do not edit!
package com.example.realestateapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.realestateapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton addToFav;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final Button bookProperty;

  @NonNull
  public final Button callButton;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final TextView contactDetails;

  @NonNull
  public final TextView contactNo;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView location;

  @NonNull
  public final TextView ownerName;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView rentSell;

  @NonNull
  public final TextView shortDescription;

  @NonNull
  public final TextView text;

  private ActivityDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton addToFav,
      @NonNull ImageButton backButton, @NonNull Button bookProperty, @NonNull Button callButton,
      @NonNull CardView cardView, @NonNull CardView cardView2, @NonNull TextView contactDetails,
      @NonNull TextView contactNo, @NonNull TextView description, @NonNull ImageView imageView,
      @NonNull TextView location, @NonNull TextView ownerName, @NonNull TextView price,
      @NonNull TextView rentSell, @NonNull TextView shortDescription, @NonNull TextView text) {
    this.rootView = rootView;
    this.addToFav = addToFav;
    this.backButton = backButton;
    this.bookProperty = bookProperty;
    this.callButton = callButton;
    this.cardView = cardView;
    this.cardView2 = cardView2;
    this.contactDetails = contactDetails;
    this.contactNo = contactNo;
    this.description = description;
    this.imageView = imageView;
    this.location = location;
    this.ownerName = ownerName;
    this.price = price;
    this.rentSell = rentSell;
    this.shortDescription = shortDescription;
    this.text = text;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_to_fav;
      ImageButton addToFav = ViewBindings.findChildViewById(rootView, id);
      if (addToFav == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.book_property;
      Button bookProperty = ViewBindings.findChildViewById(rootView, id);
      if (bookProperty == null) {
        break missingId;
      }

      id = R.id.callButton;
      Button callButton = ViewBindings.findChildViewById(rootView, id);
      if (callButton == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.card_view2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.contact_details;
      TextView contactDetails = ViewBindings.findChildViewById(rootView, id);
      if (contactDetails == null) {
        break missingId;
      }

      id = R.id.contact_no;
      TextView contactNo = ViewBindings.findChildViewById(rootView, id);
      if (contactNo == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.owner_name;
      TextView ownerName = ViewBindings.findChildViewById(rootView, id);
      if (ownerName == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.rent_sell;
      TextView rentSell = ViewBindings.findChildViewById(rootView, id);
      if (rentSell == null) {
        break missingId;
      }

      id = R.id.short_description;
      TextView shortDescription = ViewBindings.findChildViewById(rootView, id);
      if (shortDescription == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      return new ActivityDetailsBinding((ConstraintLayout) rootView, addToFav, backButton,
          bookProperty, callButton, cardView, cardView2, contactDetails, contactNo, description,
          imageView, location, ownerName, price, rentSell, shortDescription, text);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
